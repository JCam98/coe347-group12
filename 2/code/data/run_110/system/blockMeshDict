FoamFile
{
    version  2.0;
    format   ascii;
    class    dictionary;
    object   blockMeshDict;
}

convertToMeters 1.0;

vertices
(
   // put vertices here
   // this is sample entry

   // ( 1.0000000000000000e+01 -7.0710678118654746e-01  5.0000000000000003e-02) // 63

   (0.5 0.0 -4.0) 		// 0.0
	(0.3535533905932738 0.35355339059327373 -4.0) 		// 1.0
	(3.061616997868383e-17 0.5 -4.0) 		// 2.0
	(-0.35355339059327373 0.3535533905932738 -4.0) 		// 3.0
	(-0.5 6.123233995736766e-17 -4.0) 		// 4.0
	(-0.35355339059327384 -0.35355339059327373 -4.0) 		// 5.0
	(-9.184850993605148e-17 -0.5 -4.0) 		// 6.0
	(0.3535533905932737 -0.35355339059327384 -4.0) 		// 7.0
	(1.5 0.0 -4.0) 		// 8.0
	(1.0606601717798214 1.0606601717798212 -4.0) 		// 9.0
	(9.184850993605148e-17 1.5 -4.0) 		// 10.0
	(-1.0606601717798212 1.0606601717798214 -4.0) 		// 11.0
	(-1.5 1.8369701987210297e-16 -4.0) 		// 12.0
	(-1.0606601717798214 -1.0606601717798212 -4.0) 		// 13.0
	(-2.755455298081545e-16 -1.5 -4.0) 		// 14.0
	(1.060660171779821 -1.0606601717798214 -4.0) 		// 15.0
	(10.0 0.0 -4.0) 		// 16.0
	(10.0 1.0606601717798212 -4.0) 		// 17.0
	(10.0 4.0 -4.0) 		// 18.0
	(1.0606601717798214 4.0 -4.0) 		// 19.0
	(9.184850993605148e-17 4.0 -4.0) 		// 20.0
	(-1.0606601717798212 4.0 -4.0) 		// 21.0
	(-4.0 4.0 -4.0) 		// 22.0
	(-4.0 1.0606601717798214 -4.0) 		// 23.0
	(-4.0 1.8369701987210297e-16 -4.0) 		// 24.0
	(-4.0 -1.0606601717798212 -4.0) 		// 25.0
	(-4.0 -4.0 -4.0) 		// 26.0
	(-1.0606601717798214 -4.0 -4.0) 		// 27.0
	(-2.755455298081545e-16 -4.0 -4.0) 		// 28.0
	(1.060660171779821 -4.0 -4.0) 		// 29.0
	(10.0 -4.0 -4.0) 		// 30.0
	(10.0 -1.0606601717798214 -4.0) 		// 31.0
	(0.5 0.0 4.0) 		// 32.0
	(0.3535533905932738 0.35355339059327373 4.0) 		// 33.0
	(3.061616997868383e-17 0.5 4.0) 		// 34.0
	(-0.35355339059327373 0.3535533905932738 4.0) 		// 35.0
	(-0.5 6.123233995736766e-17 4.0) 		// 36.0
	(-0.35355339059327384 -0.35355339059327373 4.0) 		// 37.0
	(-9.184850993605148e-17 -0.5 4.0) 		// 38.0
	(0.3535533905932737 -0.35355339059327384 4.0) 		// 39.0
	(1.5 0.0 4.0) 		// 40.0
	(1.0606601717798214 1.0606601717798212 4.0) 		// 41.0
	(9.184850993605148e-17 1.5 4.0) 		// 42.0
	(-1.0606601717798212 1.0606601717798214 4.0) 		// 43.0
	(-1.5 1.8369701987210297e-16 4.0) 		// 44.0
	(-1.0606601717798214 -1.0606601717798212 4.0) 		// 45.0
	(-2.755455298081545e-16 -1.5 4.0) 		// 46.0
	(1.060660171779821 -1.0606601717798214 4.0) 		// 47.0
	(10.0 0.0 4.0) 		// 48.0
	(10.0 1.0606601717798212 4.0) 		// 49.0
	(10.0 4.0 4.0) 		// 50.0
	(1.0606601717798214 4.0 4.0) 		// 51.0
	(9.184850993605148e-17 4.0 4.0) 		// 52.0
	(-1.0606601717798212 4.0 4.0) 		// 53.0
	(-4.0 4.0 4.0) 		// 54.0
	(-4.0 1.0606601717798214 4.0) 		// 55.0
	(-4.0 1.8369701987210297e-16 4.0) 		// 56.0
	(-4.0 -1.0606601717798212 4.0) 		// 57.0
	(-4.0 -4.0 4.0) 		// 58.0
	(-1.0606601717798214 -4.0 4.0) 		// 59.0
	(-2.755455298081545e-16 -4.0 4.0) 		// 60.0
	(1.060660171779821 -4.0 4.0) 		// 61.0
	(10.0 -4.0 4.0) 		// 62.0
	(10.0 -1.0606601717798214 4.0) 		// 63.0

);

blocks
(

   // put blocks here
   // this is a sample entry

   // block 0
   // hex (0 8 9 1 32 40 41 33) (10 20 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

      // block 0
   hex (0 8 9 1 32 40 41 33) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 1
   hex (1 9 10 2 33 41 42 34) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 2
   hex (2 10 11 3 34 42 43 35) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 3
   hex (3 11 12 4 35 43 44 36) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 4
   hex (4 12 13 5 36 44 45 37) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 5
   hex (5 13 14 6 37 45 46 38) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 6
   hex (6 14 15 7 38 46 47 39) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 7
   hex (7 15 8 0 39 47 40 32) (60 120 1) simpleGrading ( 2.00000e+00  1.00000e+00 1.0)

   // block 8
   hex (8 16 17 9 40 48 49 41) (180 120 1) simpleGrading ( 4.00000e+00  1.00000e+00 1.0)

   // block 9
   hex (9 17 18 19 41 49 50 51) (180 180 1) simpleGrading ( 4.00000e+00  4.00000e+00 1.0)

   // block 10
   hex (10 9 19 20 42 41 51 52) (120 180 1) simpleGrading ( 1.00000e+00  4.00000e+00 1.0)

   // block 11
   hex (11 10 20 21 43 42 52 53) (120 180 1) simpleGrading ( 1.00000e+00  4.00000e+00 1.0)

   // block 12
   hex (23 11 21 22 55 43 53 54) (90 180 1) simpleGrading ( 2.50000e-01  4.00000e+00 1.0)

   // block 13
   hex (24 12 11 23 56 44 43 55) (90 120 1) simpleGrading ( 2.50000e-01  1.00000e+00 1.0)

   // block 14
   hex (25 13 12 24 57 45 44 56) (90 120 1) simpleGrading ( 2.50000e-01  1.00000e+00 1.0)

   // block 15
   hex (26 27 13 25 58 59 45 57) (90 180 1) simpleGrading ( 2.50000e-01  2.50000e-01 1.0)

   // block 16
   hex (27 28 14 13 59 60 46 45) (120 180 1) simpleGrading ( 1.00000e+00  2.50000e-01 1.0)

   // block 17
   hex (28 29 15 14 60 61 47 46) (120 180 1) simpleGrading ( 1.00000e+00  2.50000e-01 1.0)

   // block 18
   hex (29 30 31 15 61 62 63 47) (180 180 1) simpleGrading ( 4.00000e+00  2.50000e-01 1.0)

   // block 19
   hex (15 31 16 8 47 63 48 40) (180 120 1) simpleGrading ( 4.00000e+00  1.00000e+00 1.0)

);

edges
(

 // put special edges, such as arcs, here

 // this is a sample entry
 // arc 0 1 ( 4.61940e-01  1.91342e-01 -5.00000e-02)

    arc 0 1 (0.46193976625564337 0.1913417161825449 -4.0)
	arc 1 2 (0.19134171618254492 0.46193976625564337 -4.0)
	arc 2 3 (-0.19134171618254486 0.46193976625564337 -4.0)
	arc 3 4 (-0.46193976625564337 0.19134171618254495 -4.0)
	arc 4 5 (-0.4619397662556434 -0.19134171618254484 -4.0)
	arc 5 6 (-0.19134171618254517 -0.46193976625564326 -4.0)
	arc 6 7 (0.191341716182545 -0.4619397662556433 -4.0)
	arc 7 0 (0.46193976625564326 -0.1913417161825452 -4.0)
	arc 8 9 (1.38581929876693 0.5740251485476346 -4.0)
	arc 9 10 (0.5740251485476348 1.38581929876693 -4.0)
	arc 10 11 (-0.5740251485476346 1.38581929876693 -4.0)
	arc 11 12 (-1.38581929876693 0.5740251485476349 -4.0)
	arc 12 13 (-1.3858192987669302 -0.5740251485476345 -4.0)
	arc 13 14 (-0.5740251485476355 -1.3858192987669298 -4.0)
	arc 14 15 (0.574025148547635 -1.38581929876693 -4.0)
	arc 15 8 (1.3858192987669296 -0.5740251485476355 -4.0)
	arc 32 33 (0.46193976625564337 0.1913417161825449 4.0)
	arc 33 34 (0.19134171618254492 0.46193976625564337 4.0)
	arc 34 35 (-0.19134171618254486 0.46193976625564337 4.0)
	arc 35 36 (-0.46193976625564337 0.19134171618254495 4.0)
	arc 36 37 (-0.4619397662556434 -0.19134171618254484 4.0)
	arc 37 38 (-0.19134171618254517 -0.46193976625564326 4.0)
	arc 38 39 (0.191341716182545 -0.4619397662556433 4.0)
	arc 39 32 (0.46193976625564326 -0.1913417161825452 4.0)
	arc 40 41 (1.38581929876693 0.5740251485476346 4.0)
	arc 41 42 (0.5740251485476348 1.38581929876693 4.0)
	arc 42 43 (-0.5740251485476346 1.38581929876693 4.0)
	arc 43 44 (-1.38581929876693 0.5740251485476349 4.0)
	arc 44 45 (-1.3858192987669302 -0.5740251485476345 4.0)
	arc 45 46 (-0.5740251485476355 -1.3858192987669298 4.0)
	arc 46 47 (0.574025148547635 -1.38581929876693 4.0)
	arc 47 40 (1.3858192987669296 -0.5740251485476355 4.0)

);

boundary
(

  inlet
  {
      type patch;
      faces
      (
         (22 54 55 23)
         (23 55 56 24)
         (24 56 57 25)
         (25 57 58 26)
      );
  }

  outlet
  {
      type patch;
      faces
      (
         (18 50 49 17)
         (17 49 48 16)
         (16 48 63 31)
         (31 63 62 30)
      );
  }

  cylinder
  {
      type wall;
      faces
      (
         (0 32 33 1)
         (1 33 34 2)
         (2 34 35 3)
         (3 35 36 4)
         (4 36 37 5)
         (5 37 38 6)
         (6 38 39 7)
         (7 39 32 0)
      );
  }

  top
  {
      type symmetryPlane;
      faces
      (
         (22 54 53 21)
         (21 53 52 20)
         (20 52 51 19)
         (19 51 50 18)
      );
  }

  bottom
  {
      type symmetryPlane;
      faces
      (
         (26 58 59 27)
         (27 59 60 28)
         (28 60 61 29)
         (29 61 62 30)
      );
  }
);
